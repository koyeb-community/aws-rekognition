parameters:
    - name: STORE
      description: "The store to watch to trigger the function and save the AWS Rekognition result."
      type: STORE_REF
      required: true
    - name: AWS_ACCESS_KEY
      description: "The secret name containing your AWS access key. Must be a valid AWS access key with access to the AWS Rekognition API."
      required: true
      type: "SECRET_REF"
    - name: AWS_SECRET_KEY
      description: "The secret name containing your AWS secret key. Must be a valid AWS secret key with access to the AWS Rekognition API."
      required: true
      type: "SECRET_REF"
    - name: AWS_REGION
      description: "The region used to perform the AWS Rekognition API call."
      type: "STRING"
      default: "eu-west-1"
    - name: REKOGNITION_FILE_REFIX
      description: "The file prefix used to store the AWS Rekognition response."
      type: "STRING"
      default: "aws-rekognition"
    - name: REKOGNITION_FUNCTION
      description: "The name of the Rekognition operation to perform: face-detection, label-detection, explicit-content-detection, text-detection, or celebrities-detection"
      type: "STRING"
      default: "label-detection"
template: |
    env:
        AWS_ACCESS_KEY:
            value_from_secret: {{ .AWS_ACCESS_KEY }}
        AWS_SECRET_KEY:
            value_from_secret: {{ .AWS_SECRET_KEY }}
        {{ if .AWS_REGION }}
        AWS_REGION: {{ .AWS_REGION}}
        {{ end }}
        {{ if .REKOGNITION_FILE_REFIX }}
        REKOGNITION_FILE_REFIX: {{ .REKOGNITION_FILE_REFIX }}
        {{ end }}
        {{ if .REKOGNITION_FUNCTION }}
        REKOGNITION_FUNCTION: {{ .REKOGNITION_FUNCTION }}
        {{ end }}
    volumes:
    - name: {{ .STORE }}
      store: {{ .STORE }}
    events:
      - cloudevent:
          expression: |
            event.source == "koyeb.com/gateway" &&
            event.subject == "{{ .STORE }}" &&
            event.type.matches("s3:ObjectCreated:.*") &&
            !data.object.key.startsWith("{{ .REKOGNITION_FILE_REFIX }}") &&
            data.object.key.matches("([^\\s]+(\\.(?i)(jpe?g|png))$)")